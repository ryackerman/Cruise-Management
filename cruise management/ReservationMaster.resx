<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>